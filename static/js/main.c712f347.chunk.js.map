{"version":3,"sources":["components/Form.js","components/Popup.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","handleLinkChange","e","preventDefault","setState","imageUrl","target","value","submit","imageSubmitter","state","onSubmit","this","className","isEmpty","onClick","closeForm","type","placeholder","onChange","accept","handleFiles","files","id","multiple","htmlFor","React","Component","Popup","closePopup","deleteImage","src","popImageUrl","alt","App","imageUrlsArray","imageUrlArray","push","filter","url","showForm","i","length","file","reader","FileReader","onload","urls","JSON","parse","result","galleryImages","forEach","data","readAsText","startsWith","console","log","readAsDataURL","handlePopup","showModal","openForm","onImgLoad","img","aspectRatio","naturalWidth","naturalHeight","parentNode","style","height","window","screen","width","flexGrow","onDragEnter","stopPropagation","onDragOver","onDrop","dataTransfer","dimensions","images","map","index","onLoad","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c712f347.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Form extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      imageUrl: '',\r\n    }\r\n  }\r\n  handleLinkChange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      imageUrl: e.target.value\r\n    });\r\n  };\r\n\r\n  submit = (e) => {\r\n    e.preventDefault();\r\n    this.props.imageSubmitter(this.state.imageUrl);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <form onSubmit={this.props.imageSubmitter} className={this.props.isEmpty ? \"form_empty\" : \"form\"}>\r\n         {!this.props.isEmpty && (<button className=\"form__button_close button_close button\" onClick={this.props.closeForm}>Закрыть X</button>)}\r\n          <p className=\"form__p_first form__p\">Вставьте ссылку к картинке</p>\r\n          <input type=\"text\"\r\n          className=\"form__input_text input_text\"\r\n          placeholder=\"Вставьте ссылку сюда\"\r\n          onChange={this.handleLinkChange}\r\n          />\r\n          <button type=\"submit\" className=\"form__button_3d button_3d button\" onClick={this.submit}>Вставить</button>\r\n          <p className=\"form__p_second form__p\">или</p>\r\n          <input className=\"input_file\" type=\"file\" accept=\".json, image/*\" onChange={(e) => this.props.handleFiles(e.target.files)} id=\"input\" multiple />\r\n          <p className=\"form__p_third form__p\">Загрузите <label htmlFor=\"input\" className=\"form__label_input\">файл</label></p>\r\n\r\n        </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nclass Popup extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"popup\" onClick={this.props.closePopup}>\r\n          <div className=\"popup__inner\">\r\n            <button className=\"popup__button_delete popup__button button_delete button\" onClick={this.props.deleteImage}>Удалить</button>\r\n            <button\r\n            className=\"popup__button_close popup__button button_close button\"\r\n            onClick={this.props.closePopup}\r\n            >закрыть X</button>\r\n            <img className=\"popup__image image\" src={this.props.popImageUrl} alt=\"imageItem\"/>\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Popup;","import React from 'react';\nimport './App.scss';\nimport Form from './components/Form';\nimport Popup from './components/Popup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrlArray: [],\n      showModal: false,\n      showForm: false,\n      popImageUrl: '',\n      dimensions: {}\n    }\n  }\n  \n  imageSubmitter = (imageUrl) => {\n    if (imageUrl) {\n      let imageUrlsArray = this.state.imageUrlArray;\n      imageUrlsArray.push(imageUrl);\n      this.setState({\n        imageUrlArray: imageUrlsArray\n      });\n    }\n  };\n\n  deleteImage = (e) => {\n    this.setState({\n      imageUrlArray: this.state.imageUrlArray.filter((url) => url !== this.state.popImageUrl)\n    })\n  }\n\n  closeForm = (e) => {\n    this.setState({\n      showForm: !this.state.showForm\n    })\n  }\n\n  handleFiles = (files) => {\n    for (let i = 0; i < files.length; i++) {\n      let file = files[i];\n      let reader = new FileReader();\n      if (file.type === 'application/json') {\n        reader.onload = (e) => {\n          let urls = [];\n          JSON.parse(e.target.result).galleryImages.forEach((data) => urls.push(data.url));\n          this.setState({\n            imageUrlArray: [...this.state.imageUrlArray, ...urls]\n          })\n        };\n        reader.readAsText(file);\n      }\n      if (file.type.startsWith('image/')) {\n        reader.onload = (e) => {\n          console.log(e.target.result)\n          this.setState({\n            imageUrlArray: [...this.state.imageUrlArray, e.target.result]\n          })\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }\n\nhandlePopup = (url) => {\n  this.setState({\n    showModal: !this.state.showModal,\n    popImageUrl: url\n  })\n}\n\nopenForm = () => this.setState({showForm: true});\n\nonImgLoad = ({target:img}) => {\n  let aspectRatio = img.naturalWidth/img.naturalHeight;\n  img.parentNode.style.height = 'auto';\n  if (window.screen.width < 480) {\n    img.parentNode.style.width = aspectRatio*120 + \"px\";\n    img.parentNode.style.flexGrow = aspectRatio*120;\n    return;\n  }\n  img.parentNode.style.width = aspectRatio*200 + \"px\";\n  img.parentNode.style.flexGrow = aspectRatio*200;\n  \n}\n\nonDragEnter = (e) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nonDragOver = (e) => {\n  e.stopPropagation();\n  e.preventDefault();\n};\n\nonDrop = (e) => {\n  e.stopPropagation();\n  e.preventDefault();\n\n  let dt = e.dataTransfer;\n  let files = dt.files;\n\n  this.handleFiles(files);\n};\n\n  render() {\n    let imageUrlArray = this.state.imageUrlArray;\n    \n    const images = imageUrlArray.map((url, index) =>{\n    return(\n          <div className=\"main__image-wrapper\">\n            {<img\n              src={url} \n              alt=\"imageItem\"\n              onClick={() => this.handlePopup(url)}\n              onLoad={this.onImgLoad}\n              key={index}\n              className=\"main__image image\"\n            />}\n          </div>\n      )\n    })\n    return (\n      <div className=\"main\" onDragEnter={this.onDragEnter} onDragOver={this.onDragOver} onDrop={this.onDrop}>\n        {(this.state.showForm || this.state.imageUrlArray.length === 0) && (\n        <Form\n        closeForm={this.closeForm}\n        imageSubmitter={this.imageSubmitter}\n        handleFiles={this.handleFiles}\n        imageSubmitter={this.imageSubmitter}\n        isEmpty={this.state.imageUrlArray.length === 0}\n        />)}\n        {this.state.imageUrlArray.length !== 0 && (\n        <section className=\"main__container\">\n          {this.state.showModal && (\n          <Popup\n          deleteImage={this.deleteImage}\n          popImageUrl={this.state.popImageUrl}\n          closePopup={this.handlePopup}\n          />)}\n          {images}\n          <button className=\"main__button_add button_add button\" onClick={this.openForm}></button>\n        </section>)}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}